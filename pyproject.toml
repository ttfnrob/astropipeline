[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "astropipeline"
version = "0.1.0"
description = "A modular, auditable system of AI agents and tools to generate and test astrophysics hypotheses with web interface"
authors = [
    {name = "AstroAgent Team", email = "team@astroagent.dev"}
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    # Core astronomy packages
    "astropy>=5.0",
    "astroquery>=0.4.6",
    "scipy>=1.9.0",
    "numpy>=1.21.0",
    "pandas>=2.1.3",
    
    # Imaging and photometry (optional but included)
    "matplotlib>=3.5.0",
    "photutils>=1.5.0",
    "reproject>=0.10.0",
    "ccdproc>=2.4.0",
    
    # Statistics and machine learning
    "scikit-learn>=1.1.0",
    "statsmodels>=0.13.0",
    "pymc>=5.0.0",
    "arviz>=0.12.0",
    
    # HTTP and utilities
    "requests>=2.28.0",
    "httpx>=0.23.0",
    "tenacity>=8.0.0",
    "pydantic>=2.5.0",
    
    # Vector databases and embeddings
    "faiss-cpu>=1.7.0",
    "sentence-transformers>=2.2.0",
    
    # Agent orchestration
    "langgraph>=0.0.40",
    
    # CLI and logging
    "typer>=0.9.0",
    "rich>=13.0.0",
    "loguru>=0.7.0",
    
    # Configuration and utilities
    "pyyaml>=6.0",
    "tqdm>=4.64.0",
    "gitpython>=3.1.0",
    "ulid-py>=1.1.0",
    
    # FITS file handling
    "fitsio>=1.1.8",
    
    # Optional dynamics packages
    "jplephem>=2.17",
    "spiceypy>=5.1.0",
    
    # Web UI and API dependencies
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.2",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
polars = ["polars>=0.19.0"]
service = []  # Web UI dependencies are now in main dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/astroagent"
Repository = "https://github.com/yourusername/astroagent"
Documentation = "https://astroagent.readthedocs.io"

[project.scripts]
astroagent = "astroagent.cli:main"
astropipeline = "start:main"

[tool.hatch.build.targets.wheel]
packages = ["astroagent", "web_ui"]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
]
